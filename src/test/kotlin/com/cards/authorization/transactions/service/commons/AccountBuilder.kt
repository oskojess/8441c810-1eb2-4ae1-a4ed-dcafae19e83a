package com.cards.authorization.transactions.service.commonsimport com.cards.authorization.transactions.service.repositories.database.account.entity.AccountEntityimport com.cards.authorization.transactions.service.repositories.database.account.entity.PersonCategoryIdimport com.cards.authorization.transactions.service.repositories.database.category.entity.CategoryEntityimport com.cards.authorization.transactions.service.repositories.database.person.entity.PersonEntityimport com.cards.authorization.transactions.service.commons.CategoryBuilder.buildCategoryimport com.cards.authorization.transactions.service.commons.Constants.ACCOUNT_IDimport com.cards.authorization.transactions.service.commons.PersonBuilder.buildPersonimport java.math.BigDecimalobject AccountBuilder {    fun buildAccount(        accountId: String = ACCOUNT_ID,        person: PersonEntity = buildPerson(),        category: CategoryEntity = buildCategory(),        balance: BigDecimal = BigDecimal(200.00),        personCategory: PersonCategoryId = PersonCategoryId(buildPerson().id, buildCategory().id)    ) = AccountEntity(        accountId = accountId,        person = person,        category = category,        balance = balance,        personCategory = personCategory    )}