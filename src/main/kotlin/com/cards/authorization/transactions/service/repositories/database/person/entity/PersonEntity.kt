package com.cards.authorization.transactions.service.repositories.database.person.entityimport com.cards.authorization.transactions.service.repositories.database.account.entity.AccountEntityimport jakarta.persistence.CascadeTypeimport jakarta.persistence.Columnimport jakarta.persistence.Entityimport jakarta.persistence.Idimport jakarta.persistence.OneToManyimport jakarta.persistence.Tableimport jakarta.persistence.Temporalimport jakarta.persistence.TemporalTypeimport org.hibernate.annotations.CreationTimestampimport org.hibernate.annotations.UpdateTimestampimport java.time.LocalDateTime@Entity@Table(name = "person")data class PersonEntity(    @Id    @Column(nullable = false, updatable = false)    val id: String,    @OneToMany(mappedBy = "person", cascade = [CascadeType.ALL], orphanRemoval = true)    val accounts: List<AccountEntity> = emptyList(),    @CreationTimestamp    @Temporal(TemporalType.TIMESTAMP)    @Column(name = "created_at", updatable = false)    val createdAt: LocalDateTime,    @UpdateTimestamp    @Temporal(TemporalType.TIMESTAMP)    @Column(name = "updated_at")    val updatedAt: LocalDateTime)