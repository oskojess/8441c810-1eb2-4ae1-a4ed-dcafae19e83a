package com.cards.authorization.transactions.service.domain.accountimport com.cards.authorization.transactions.service.domain.account.entites.Accountimport com.cards.authorization.transactions.service.domain.category.CategoryRepositoryimport com.cards.authorization.transactions.service.domain.exceptions.ResourceNotFoundExceptionimport org.springframework.stereotype.Service@Serviceclass AccountService(    private val accountRepository: AccountRepository,    private val categoryRepository: CategoryRepository) {    fun findAccountByCategoryType(type: String): Account {        val getAccountByCategoryId = categoryRepository.findByCategoryType(type)?.let { category ->            accountRepository.findAccountByCategoryId(category.id)        }        return getAccountByCategoryId            ?: throw ResourceNotFoundException("Accoun not found for ${type}")    }}