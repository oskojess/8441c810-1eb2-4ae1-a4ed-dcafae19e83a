package com.cards.authorization.transactions.service.repositories.database.accountimport com.cards.authorization.transactions.service.repositories.database.account.AccountTypeQuery.FIND_ACCOUNT_BY_ACCOUNT_IDimport com.cards.authorization.transactions.service.repositories.database.account.AccountTypeQuery.FIND_ACCOUNT_BY_CATEGORY_IDimport com.cards.authorization.transactions.service.repositories.database.account.entity.AccountEntityimport com.cards.authorization.transactions.service.repositories.database.account.entity.PersonCategoryIdimport org.springframework.data.jpa.repository.JpaRepositoryimport org.springframework.data.jpa.repository.Queryimport org.springframework.data.repository.query.Paraminterface AccountEntityRepositoryJpa : JpaRepository<AccountEntity, PersonCategoryId> {    @Query(FIND_ACCOUNT_BY_ACCOUNT_ID, nativeQuery = true)    fun findByAccountId(@Param("accountId") accountId: String): AccountEntity?    @Query(FIND_ACCOUNT_BY_CATEGORY_ID, nativeQuery = true)    fun findAccountByCategoryId(@Param("categoryId") categoryId: String): AccountEntity?}