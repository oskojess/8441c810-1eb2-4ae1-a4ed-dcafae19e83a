package com.cards.authorization.transactions.service.application.web.controllerimport com.cards.authorization.transactions.service.application.service.AuthorizationServiceimport com.cards.authorization.transactions.service.application.web.controller.authorization.dto.request.TransactionRequestimport com.cards.authorization.transactions.service.application.web.controller.authorization.dto.request.toTransactionDTOimport com.cards.authorization.transactions.service.application.web.controller.authorization.dto.response.TransactionResponseimport com.cards.authorization.transactions.service.domain.account.AccountRepositoryimport org.springframework.http.ResponseEntityimport org.springframework.web.bind.annotation.PostMappingimport org.springframework.web.bind.annotation.RequestBodyimport org.springframework.web.bind.annotation.RequestMappingimport org.springframework.web.bind.annotation.RestController@RestController@RequestMapping("transactions")class AuthorizationController(    private val authorizationService: AuthorizationService,    private val accountRepository: AccountRepository,) {    @PostMapping("/v1/authorize")    fun authorizeTransactions(@RequestBody request: TransactionRequest): ResponseEntity<TransactionResponse> {        val account = accountRepository.findByAccountId(request.accountId)        val transaction = request.toTransactionDTO()        val responseCode = authorizationService.authorize(account, transaction)        val response = TransactionResponse(responseCode)        return ResponseEntity.ok(response)    }}